<Window x:Class="AutoTool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AutoTool"
        xmlns:vm="clr-namespace:AutoTool.ViewModel"
        xmlns:panel="clr-namespace:AutoTool.View"
        xmlns:view="clr-namespace:AutoTool.View"
        xmlns:converters="clr-namespace:AutoTool.View.Converters"
        mc:Ignorable="d"
        Title="{Binding Title}" 
        MinWidth="600" MinHeight="400"
        Height="{Binding WindowHeight, Mode=TwoWay}" 
        Width="{Binding WindowWidth, Mode=TwoWay}"
        WindowState="{Binding WindowState, Mode=TwoWay}"
        Closing="Window_Closing">

    <Window.Resources>
        <converters:InvertBooleanConverter x:Key="InvertBooleanConverter"/>
        <converters:RunningStatusConverter x:Key="RunningStatusConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
    </Window.Resources>

    <!-- キーボードショートカットの設定 (Phase 5完全統合対応) -->
    <Window.InputBindings>
        <!-- ファイル操作 -->
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding SaveFileCommand}"/>
        <KeyBinding Key="S" Modifiers="Ctrl+Shift" Command="{Binding SaveFileAsCommand}"/>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding OpenFileCommand}"/>
        <!-- Undo/Redo操作 (Phase 5完全統合DI対応) -->
        <KeyBinding Key="Z" Modifiers="Ctrl" Command="{Binding UndoCommand}" />
        <KeyBinding Key="Y" Modifiers="Ctrl" Command="{Binding RedoCommand}" />
        <KeyBinding Key="Z" Modifiers="Ctrl+Shift" Command="{Binding RedoCommand}" />
    </Window.InputBindings>
    
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- メニューバー (Phase 5完全統合ViewModelサポート) -->
        <Menu Grid.Row="0" IsEnabled="{Binding IsRunning, Converter={StaticResource InvertBooleanConverter}}">
            <MenuItem Header="ファイル(_F)">
                <MenuItem Header="開く(_O)" Command="{Binding OpenFileCommand}" InputGestureText="Ctrl+O"/>
                <MenuItem Header="{Binding MenuItemHeader_SaveFile}" Command="{Binding SaveFileCommand}" InputGestureText="Ctrl+S"/>
                <MenuItem Header="{Binding MenuItemHeader_SaveFileAs}" Command="{Binding SaveFileAsCommand}" InputGestureText="Ctrl+Shift+S"/>
                <Separator/>
                <MenuItem Header="最近開いたファイル" ItemsSource="{Binding RecentFiles}">
                    <MenuItem.ItemTemplate>
                        <DataTemplate>
                            <MenuItem Header="{Binding FileName}" Command="{Binding DataContext.OpenFileCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding FilePath}" />
                        </DataTemplate>
                    </MenuItem.ItemTemplate>
                </MenuItem>
                <Separator/>
                <MenuItem Header="設定" />
                <Separator/>
                <MenuItem Header="終了(_X)" Command="{Binding ExitCommand}" InputGestureText="Alt+F4"/>
            </MenuItem>
            <MenuItem Header="編集(_E)">
                <!-- Phase 5完全統合DI対応Undo/Redo -->
                <MenuItem Header="元に戻す(_U)" Command="{Binding UndoCommand}" InputGestureText="Ctrl+Z"/>
                <MenuItem Header="やり直し(_R)" Command="{Binding RedoCommand}" InputGestureText="Ctrl+Y"/>
                <Separator/>
                <MenuItem Header="切り取り(_T)" Command="ApplicationCommands.Cut" InputGestureText="Ctrl+X"/>
                <MenuItem Header="コピー(_C)" Command="ApplicationCommands.Copy" InputGestureText="Ctrl+C"/>
                <MenuItem Header="貼り付け(_P)" Command="ApplicationCommands.Paste" InputGestureText="Ctrl+V"/>
                <MenuItem Header="削除(_D)" Command="ApplicationCommands.Delete" InputGestureText="Delete"/>
            </MenuItem>
            <MenuItem Header="表示(_V)">
                <MenuItem Header="テーマ(_T)">
                    <MenuItem Header="ライト" Command="{Binding ChangeThemeCommand}" CommandParameter="Light" />
                    <MenuItem Header="ダーク" Command="{Binding ChangeThemeCommand}" CommandParameter="Dark" />
                    <MenuItem Header="システム設定に合わせる" Command="{Binding ChangeThemeCommand}" CommandParameter="Auto" />
                </MenuItem>
                <Separator/>
                <MenuItem Header="パフォーマンス情報を更新" Command="{Binding RefreshPerformanceCommand}" />
            </MenuItem>
            <MenuItem Header="プラグイン(_P)">
                <MenuItem Header="プラグインの読み込み..." Command="{Binding LoadPluginFileCommand}" />
                <MenuItem Header="全プラグインの再読み込み" Command="{Binding RefreshPluginsCommand}" />
                <Separator/>
                <MenuItem Header="プラグイン情報の表示" Command="{Binding ShowPluginInfoCommand}" />
            </MenuItem>
            <MenuItem Header="ツール(_T)">
                <MenuItem Header="アプリケーションフォルダを開く" Command="{Binding OpenAppDirCommand}" />
            </MenuItem>
            <MenuItem Header="ヘルプ(_H)">
                <MenuItem Header="バージョン情報(_A)..." Command="{Binding ShowAboutCommand}" />
            </MenuItem>
        </Menu>

        <!-- ツールバー (Phase 5完全統合ViewModel対応) -->
        <ToolBarTray Grid.Row="1">
            <ToolBar IsEnabled="{Binding IsRunning, Converter={StaticResource InvertBooleanConverter}}">
                <Button Content="開く" Command="{Binding OpenFileCommand}" ToolTip="ファイルを開く (Ctrl+O)" />
                <Button Content="保存" Command="{Binding SaveFileCommand}" ToolTip="ファイルを保存 (Ctrl+S)" />
                <Separator />
                <!-- Phase 5完全統合DI対応Undo/Redo -->
                <Button Content="元に戻す" Command="{Binding UndoCommand}" ToolTip="元に戻す (Ctrl+Z)"/>
                <Button Content="やり直し" Command="{Binding RedoCommand}" ToolTip="やり直し (Ctrl+Y)"/>
            </ToolBar>
        </ToolBarTray>

        <!-- メインコンテンツ (Phase 5完全統合対応) -->
        <TabControl Grid.Row="2" SelectedIndex="{Binding SelectedTabIndex}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <TabItem Header="マクロ (Phase 5完全統合)">
                <Grid>
                    <!-- ロード中インジケータ -->
                    <Border Background="#80000000" Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibility}}">
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock Text="Phase 5完全統合ViewModel読み込み中..." Foreground="White" FontSize="20" HorizontalAlignment="Center" />
                            <ProgressBar IsIndeterminate="True" Width="200" Height="20" Margin="0,10,0,0" />
                        </StackPanel>
                    </Border>

                    <!-- メインコンテンツ (Phase 5完全統合MacroPanelViewModel使用) -->
                    <panel:MacroPanel DataContext="{Binding MacroPanelViewModel}" Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                </Grid>
            </TabItem>
        </TabControl>

        <!-- ステータスバー (Phase 5完全統合対応) -->
        <StatusBar Grid.Row="3" Height="25">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusMessage}" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="メモリ: " />
                    <TextBlock Text="{Binding MemoryUsage}" Margin="0,0,10,0" />
                    <TextBlock Text="CPU: " />
                    <TextBlock Text="{Binding CpuUsage}" Margin="0,0,10,0" />
                    <TextBlock Text="実行状態: " />
                    <!-- Phase 5完全統合ViewModel対応 -->
                    <TextBlock Text="{Binding MacroPanelViewModel.IsRunning, Converter={StaticResource RunningStatusConverter}}" Margin="0,0,10,0" />
                    <TextBlock Text="プラグイン: " />
                    <TextBlock Text="{Binding PluginCount}" Margin="0,0,5,0" />
                    <TextBlock Text="個 / コマンド: " />
                    <TextBlock Text="{Binding CommandCount}" Margin="0,0,5,0" />
                    <TextBlock Text="個 (Phase 5完全統合)" />
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
