<UserControl x:Class="AutoTool.View.MacroPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:AutoTool.View.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000"
             Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibility"/>
            <converters:MultiBoolToVisibilityConverter x:Key="MultiBoolToVisibility"/>
            <converters:InvertBooleanConverter x:Key="InvertBoolean"/>
            <converters:RunningStatusConverter x:Key="RunningStatusConverter"/>
            <converters:NestLevelToMarginConverter x:Key="NestLevelToMargin"/>
            <converters:NestLevelToBackgroundConverter x:Key="NestLevelToBackground"/>
            <converters:ProgressToDoubleConverter x:Key="ProgressToDouble"/>
            <converters:RunningStateToProgressVisibilityConverter x:Key="RunningStateToProgressVisibility"/>
            <converters:CommandTypeToIconConverter x:Key="CommandTypeToIcon"/>
            <converters:RunningHighlightConverter x:Key="RunningHighlightConverter"/>
            <converters:RunningBorderThicknessConverter x:Key="RunningBorderThicknessConverter"/>
            <converters:RunningFontWeightConverter x:Key="RunningFontWeightConverter"/>
            <converters:RunningTextColorConverter x:Key="RunningTextColorConverter"/>
            
            <!-- コマンドリスト用の改良されたデータテンプレート -->
            <DataTemplate x:Key="CommandItemTemplate">
                <Border Background="{Binding NestLevel, Converter={StaticResource NestLevelToBackground}}"
                        Margin="{Binding NestLevel, Converter={StaticResource NestLevelToMargin}}"
                        CornerRadius="3" Padding="5,2"
                        BorderBrush="{Binding IsRunning, Converter={StaticResource RunningHighlightConverter}}"
                        BorderThickness="{Binding IsRunning, Converter={StaticResource RunningBorderThicknessConverter}}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        
                        <!-- メインコンテンツ行 -->
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25"/>   <!-- 行番号 -->
                                <ColumnDefinition Width="25"/>   <!-- アイコン -->
                                <ColumnDefinition Width="*"/>    <!-- コマンド名 -->
                                <ColumnDefinition Width="2*"/>   <!-- 説明 -->
                                <ColumnDefinition Width="*"/>    <!-- コメント -->
                            </Grid.ColumnDefinitions>
                            
                            <!-- 行番号 -->
                            <TextBlock Grid.Column="0" Text="{Binding LineNumber}" 
                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                       FontSize="10" Foreground="Gray"/>
                            
                            <!-- コマンドアイコン -->
                            <TextBlock Grid.Column="1" Text="{Binding ItemType, Converter={StaticResource CommandTypeToIcon}}" 
                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                       FontSize="12"/>
                            
                            <!-- コマンド名（実行中は太字） -->
                            <TextBlock Grid.Column="2" Text="{Binding ItemType}" 
                                       HorizontalAlignment="Left" VerticalAlignment="Center"
                                       FontWeight="{Binding IsRunning, Converter={StaticResource RunningFontWeightConverter}}"
                                       Foreground="{Binding IsRunning, Converter={StaticResource RunningTextColorConverter}}"
                                       Margin="5,0"/>
                            
                            <!-- 説明文 -->
                            <TextBlock Grid.Column="3" Text="{Binding Description}" 
                                       HorizontalAlignment="Left" VerticalAlignment="Center"
                                       TextTrimming="CharacterEllipsis"
                                       ToolTip="{Binding Description}"
                                       FontSize="11" Margin="5,0"/>
                            
                            <!-- コメント -->
                            <TextBlock Grid.Column="4" Text="{Binding Comment}" 
                                       HorizontalAlignment="Left" VerticalAlignment="Center"
                                       Foreground="DarkGreen" FontStyle="Italic"
                                       TextTrimming="CharacterEllipsis"
                                       ToolTip="{Binding Comment}"
                                       FontSize="10" Margin="5,0"/>
                        </Grid>
                        
                        <!-- プログレスバー行 -->
                        <ProgressBar Grid.Row="1" Height="4" Margin="0,2,0,0"
                                     Value="{Binding Progress, Converter={StaticResource ProgressToDouble}}"
                                     Minimum="0" Maximum="100">
                            <ProgressBar.Visibility>
                                <MultiBinding Converter="{StaticResource RunningStateToProgressVisibility}">
                                    <Binding Path="IsRunning"/>
                                    <Binding Path="Progress"/>
                                </MultiBinding>
                            </ProgressBar.Visibility>
                            <ProgressBar.Style>
                                <Style TargetType="ProgressBar">
                                    <Setter Property="Foreground" Value="#FF06B025"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Progress}" Value="100">
                                            <Setter Property="Foreground" Value="#FF0078D4"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ProgressBar.Style>
                        </ProgressBar>
                    </Grid>
                </Border>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <!-- メインコンテンツGrid -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- ツールバー -->
        <DockPanel Grid.Row="0" LastChildFill="False">
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="5">
                <Button Content="実行" Command="{Binding RunMacroCommand}" Margin="2" Padding="10,5"/>
                <Button Content="停止" Command="{Binding StopMacroCommand}" Margin="2" Padding="10,5"/>
                <Separator Width="10"/>
                <Button Content="保存" Command="{Binding ButtonPanelViewModel.SaveCommand}" Margin="2" Padding="10,5"/>
                <Button Content="読込" Command="{Binding ButtonPanelViewModel.LoadCommand}" Margin="2" Padding="10,5"/>
                <Button Content="クリア" Command="{Binding ButtonPanelViewModel.ClearCommand}" Margin="2" Padding="10,5"/>
                <Separator Width="10"/>
                <ComboBox ItemsSource="{Binding ButtonPanelViewModel.ItemTypes}" 
                          SelectedItem="{Binding ButtonPanelViewModel.SelectedItemType}"
                          DisplayMemberPath="DisplayName"
                          Width="150" Margin="2"/>
                <Button Content="追加" Command="{Binding ButtonPanelViewModel.AddCommand}" Margin="2" Padding="10,5"/>
                <Separator Width="10"/>
                <Button Content="↑" Command="{Binding ButtonPanelViewModel.UpCommand}" Margin="2" Padding="10,5"/>
                <Button Content="↓" Command="{Binding ButtonPanelViewModel.DownCommand}" Margin="2" Padding="10,5"/>
                <Button Content="削除" Command="{Binding ButtonPanelViewModel.DeleteCommand}" Margin="2" Padding="10,5"/>
                <Separator Width="10"/>
                <Button Content="元に戻す" Command="{Binding ButtonPanelViewModel.UndoCommand}" Margin="2" Padding="10,5"/>
                <Button Content="やり直し" Command="{Binding ButtonPanelViewModel.RedoCommand}" Margin="2" Padding="10,5"/>
            </StackPanel>
        </DockPanel>

        <!-- メインコンテンツエリア -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>

            <!-- 左側：タブパネル -->
            <TabControl Grid.Column="0">
                <TabItem Header="コマンドリスト">
                    <Grid>
                        <!-- Phase 5: AutoTool統合版ListPanelに相当するコントロール -->
                        <ListBox ItemsSource="{Binding ListPanelViewModel.Items}"
                                 SelectedItem="{Binding ListPanelViewModel.SelectedItem}"
                                 SelectedIndex="{Binding ListPanelViewModel.SelectedIndex}"
                                 ItemTemplate="{StaticResource CommandItemTemplate}"
                                 ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                    </Grid>
                </TabItem>
                <TabItem Header="お気に入り">
                    <!-- Phase 5: AutoTool統合版FavoritePanelに相当するコントロール -->
                    <Grid>
                        <TextBlock Text="お気に入り機能 (Phase 5統合版で実装予定)" 
                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </TabItem>
            </TabControl>

            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Background="Gray"/>

            <!-- 右側：編集・ログパネル -->
            <TabControl Grid.Column="2">
                <TabItem Header="編集">
                    <!-- Phase 5: AutoTool統合版EditPanelに相当するコントロール -->
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel Margin="10" IsEnabled="{Binding EditPanelViewModel.IsNotNullItem}">
                            <TextBlock Text="コマンド編集パネル (Phase 5統合版)" FontWeight="Bold" Margin="0,0,0,10"/>
                            
                            <!-- 基本情報 -->
                            <GroupBox Header="基本情報" Margin="0,0,0,10">
                                <StackPanel>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        
                                        <Label Grid.Row="0" Grid.Column="0" Content="タイプ:"/>
                                        <ComboBox Grid.Row="0" Grid.Column="1" 
                                                  ItemsSource="{Binding EditPanelViewModel.ItemTypes}"
                                                  SelectedItem="{Binding EditPanelViewModel.SelectedItemTypeObj}"
                                                  DisplayMemberPath="DisplayName"
                                                  Margin="5"/>
                                        
                                        <Label Grid.Row="1" Grid.Column="0" Content="コメント:"/>
                                        <TextBox Grid.Row="1" Grid.Column="1" 
                                                 Text="{Binding EditPanelViewModel.Comment, UpdateSourceTrigger=PropertyChanged}"
                                                 Margin="5"/>
                                    </Grid>
                                </StackPanel>
                            </GroupBox>

                            <!-- ウィンドウ情報（ウィンドウ対象コマンドのみ表示） -->
                            <GroupBox Header="ウィンドウ情報" Margin="0,0,0,10">
                                <GroupBox.Visibility>
                                    <MultiBinding Converter="{StaticResource MultiBoolToVisibility}">
                                        <Binding Path="EditPanelViewModel.IsWaitImageItem"/>
                                        <Binding Path="EditPanelViewModel.IsClickImageItem"/>
                                        <Binding Path="EditPanelViewModel.IsClickImageAIItem"/>
                                        <Binding Path="EditPanelViewModel.IsIfImageExistItem"/>
                                        <Binding Path="EditPanelViewModel.IsIfImageNotExistItem"/>
                                        <Binding Path="EditPanelViewModel.IsIfImageExistAIItem"/>
                                        <Binding Path="EditPanelViewModel.IsIfImageNotExistAIItem"/>
                                        <Binding Path="EditPanelViewModel.IsHotkeyItem"/>
                                        <Binding Path="EditPanelViewModel.IsClickItem"/>
                                        <Binding Path="EditPanelViewModel.IsScreenshotItem"/>
                                        <Binding Path="EditPanelViewModel.IsSetVariableAIItem"/>
                                    </MultiBinding>
                                </GroupBox.Visibility>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <Label Grid.Row="0" Grid.Column="0" Content="タイトル:"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" 
                                             Text="{Binding EditPanelViewModel.WindowTitle, UpdateSourceTrigger=PropertyChanged}"
                                             Margin="5"/>
                                    
                                    <Label Grid.Row="1" Grid.Column="0" Content="クラス名:"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" 
                                             Text="{Binding EditPanelViewModel.WindowClassName, UpdateSourceTrigger=PropertyChanged}"
                                             Margin="5"/>
                                </Grid>
                            </GroupBox>

                            <!-- 画像検索設定（Wait_Image用のみ） -->
                            <GroupBox Header="画像検索設定" Margin="0,0,0,10"
                                      Visibility="{Binding EditPanelViewModel.IsWaitImageItem, Converter={StaticResource BoolToVisibility}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <Label Grid.Row="0" Grid.Column="0" Content="画像パス:"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" 
                                             Text="{Binding EditPanelViewModel.ImagePath, UpdateSourceTrigger=PropertyChanged}"
                                             Margin="5"/>
                                    <Button Grid.Row="0" Grid.Column="2" Content="参照" 
                                            Command="{Binding EditPanelViewModel.BrowseImageFileCommand}" Margin="5"/>
                                    
                                    <Label Grid.Row="1" Grid.Column="0" Content="閾値:"/>
                                    <StackPanel Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="5">
                                        <Slider Value="{Binding EditPanelViewModel.Threshold}" 
                                                Minimum="0" Maximum="1" Width="150" VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding EditPanelViewModel.Threshold, StringFormat=F2}" 
                                                 Width="60" Margin="10,0,0,0"/>
                                    </StackPanel>
                                    
                                    <Label Grid.Row="2" Grid.Column="0" Content="タイムアウト:"/>
                                    <StackPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="5">
                                        <TextBox Text="{Binding EditPanelViewModel.Timeout}" Width="100"/>
                                        <Label Content="ms" VerticalAlignment="Center"/>
                                    </StackPanel>
                                    
                                    <Label Grid.Row="3" Grid.Column="0" Content="間隔:"/>
                                    <StackPanel Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="5">
                                        <TextBox Text="{Binding EditPanelViewModel.Interval}" Width="100"/>
                                        <Label Content="ms" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Grid>
                            </GroupBox>

                            <!-- IF系画像設定（IfImageExist、IfImageNotExist用） -->
                            <GroupBox Header="画像条件設定" Margin="0,0,0,10">
                                <GroupBox.Visibility>
                                    <MultiBinding Converter="{StaticResource MultiBoolToVisibility}">
                                        <Binding Path="EditPanelViewModel.IsIfImageExistItem"/>
                                        <Binding Path="EditPanelViewModel.IsIfImageNotExistItem"/>
                                    </MultiBinding>
                                </GroupBox.Visibility>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <Label Grid.Row="0" Grid.Column="0" Content="画像パス:"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" 
                                             Text="{Binding EditPanelViewModel.ImagePath, UpdateSourceTrigger=PropertyChanged}"
                                             Margin="5"/>
                                    <Button Grid.Row="0" Grid.Column="2" Content="参照" 
                                            Command="{Binding EditPanelViewModel.BrowseImageFileCommand}" Margin="5"/>
                                    
                                    <Label Grid.Row="1" Grid.Column="0" Content="閾値:"/>
                                    <StackPanel Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="5">
                                        <Slider Value="{Binding EditPanelViewModel.Threshold}" 
                                                Minimum="0" Maximum="1" Width="150" VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding EditPanelViewModel.Threshold, StringFormat=F2}" 
                                                 Width="60" Margin="10,0,0,0"/>
                                    </StackPanel>
                                </Grid>
                            </GroupBox>

                            <!-- 画像クリック設定 -->
                            <GroupBox Header="画像クリック設定" Margin="0,0,0,10">
                                <GroupBox.Visibility>
                                    <MultiBinding Converter="{StaticResource MultiBoolToVisibility}">
                                        <Binding Path="EditPanelViewModel.IsClickImageItem"/>
                                        <Binding Path="EditPanelViewModel.IsClickImageAIItem"/>
                                    </MultiBinding>
                                </GroupBox.Visibility>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <!-- 画像パスと閾値はClick_Imageのみ -->
                                    <Label Grid.Row="0" Grid.Column="0" Content="画像パス:"
                                           Visibility="{Binding EditPanelViewModel.IsClickImageItem, Converter={StaticResource BoolToVisibility}}"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" 
                                             Text="{Binding EditPanelViewModel.ImagePath, UpdateSourceTrigger=PropertyChanged}"
                                             Margin="5"
                                             Visibility="{Binding EditPanelViewModel.IsClickImageItem, Converter={StaticResource BoolToVisibility}}"/>
                                    <Button Grid.Row="0" Grid.Column="2" Content="参照" 
                                            Command="{Binding EditPanelViewModel.BrowseImageFileCommand}" Margin="5"
                                            Visibility="{Binding EditPanelViewModel.IsClickImageItem, Converter={StaticResource BoolToVisibility}}"/>
                                    
                                    <Label Grid.Row="1" Grid.Column="0" Content="閾値:"
                                           Visibility="{Binding EditPanelViewModel.IsClickImageItem, Converter={StaticResource BoolToVisibility}}"/>
                                    <StackPanel Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="5"
                                                Visibility="{Binding EditPanelViewModel.IsClickImageItem, Converter={StaticResource BoolToVisibility}}">
                                        <Slider Value="{Binding EditPanelViewModel.Threshold}" 
                                                Minimum="0" Maximum="1" Width="150" VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding EditPanelViewModel.Threshold, StringFormat=F2}" 
                                                 Width="60" Margin="10,0,0,0"/>
                                    </StackPanel>
                                    
                                    <Label Grid.Row="2" Grid.Column="0" Content="マウスボタン:"/>
                                    <ComboBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
                                              ItemsSource="{Binding EditPanelViewModel.MouseButtons}"
                                              SelectedItem="{Binding EditPanelViewModel.MouseButton}"
                                              Margin="5"/>
                                    
                                    <Label Grid.Row="3" Grid.Column="0" Content="タイムアウト:"
                                           Visibility="{Binding EditPanelViewModel.IsClickImageItem, Converter={StaticResource BoolToVisibility}}"/>
                                    <StackPanel Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="5"
                                                Visibility="{Binding EditPanelViewModel.IsClickImageItem, Converter={StaticResource BoolToVisibility}}">
                                        <TextBox Text="{Binding EditPanelViewModel.Timeout}" Width="100"/>
                                        <Label Content="ms" VerticalAlignment="Center"/>
                                    </StackPanel>
                                    
                                    <Label Grid.Row="4" Grid.Column="0" Content="間隔:"
                                           Visibility="{Binding EditPanelViewModel.IsClickImageItem, Converter={StaticResource BoolToVisibility}}"/>
                                    <StackPanel Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="5"
                                                Visibility="{Binding EditPanelViewModel.IsClickImageItem, Converter={StaticResource BoolToVisibility}}">
                                        <TextBox Text="{Binding EditPanelViewModel.Interval}" Width="100"/>
                                        <Label Content="ms" VerticalAlignment="Center"/>
                                    </StackPanel>
                                    
                                    <CheckBox Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3"
                                              IsChecked="{Binding EditPanelViewModel.UseBackgroundClick}"
                                              Content="バックグラウンドクリックを使用" Margin="5"/>
                                </Grid>
                            </GroupBox>

                            <!-- バックグラウンドクリック設定 -->
                            <GroupBox Header="バックグラウンドクリック設定" Margin="0,0,0,10"
                                      Visibility="{Binding EditPanelViewModel.UseBackgroundClick, Converter={StaticResource BoolToVisibility}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <Label Grid.Column="0" Content="方法:"/>
                                    <ComboBox Grid.Column="1"
                                              ItemsSource="{Binding EditPanelViewModel.BackgroundClickMethods}"
                                              SelectedValue="{Binding EditPanelViewModel.BackgroundClickMethod}"
                                              SelectedValuePath="Value"
                                              DisplayMemberPath="DisplayName"
                                              Margin="5"/>
                                </Grid>
                            </GroupBox>

                            <!-- ホットキー設定 -->
                            <GroupBox Header="ホットキー設定" Margin="0,0,0,10"
                                      Visibility="{Binding EditPanelViewModel.IsHotkeyItem, Converter={StaticResource BoolToVisibility}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <Label Grid.Row="0" Grid.Column="0" Content="修飾キー:"/>
                                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="5">
                                        <CheckBox IsChecked="{Binding EditPanelViewModel.CtrlKey}" Content="Ctrl" Margin="0,0,10,0"/>
                                        <CheckBox IsChecked="{Binding EditPanelViewModel.AltKey}" Content="Alt" Margin="0,0,10,0"/>
                                        <CheckBox IsChecked="{Binding EditPanelViewModel.ShiftKey}" Content="Shift"/>
                                    </StackPanel>
                                    
                                    <Label Grid.Row="1" Grid.Column="0" Content="キー:"/>
                                    <ComboBox Grid.Row="1" Grid.Column="1"
                                              ItemsSource="{Binding EditPanelViewModel.KeyList}"
                                              SelectedItem="{Binding EditPanelViewModel.SelectedKey}"
                                              Margin="5"/>
                                    
                                    <Label Grid.Row="2" Grid.Column="0" Content="自由入力:"/>
                                    <TextBox Grid.Row="2" Grid.Column="1"
                                             Text="{Binding EditPanelViewModel.HotkeyText, UpdateSourceTrigger=PropertyChanged}"
                                             Margin="5"
                                             ToolTip="A、F1、Ctrl+C、Ctrl+Shift+Sなど自由に入力可能"/>
                                </Grid>
                            </GroupBox>

                            <!-- クリック設定 -->
                            <GroupBox Header="クリック設定" Margin="0,0,0,10"
                                      Visibility="{Binding EditPanelViewModel.IsClickItem, Converter={StaticResource BoolToVisibility}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <Label Grid.Row="0" Grid.Column="0" Content="X座標:"/>
                                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="5">
                                        <TextBox Text="{Binding EditPanelViewModel.ClickX}" Width="100"/>
                                        <Button Content="座標取得" Command="{Binding EditPanelViewModel.GetMousePositionCommand}" 
                                                Margin="10,0,0,0" Padding="5"/>
                                    </StackPanel>
                                    
                                    <Label Grid.Row="1" Grid.Column="0" Content="Y座標:"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" 
                                             Text="{Binding EditPanelViewModel.ClickY}" Margin="5" Width="100" HorizontalAlignment="Left"/>
                                    
                                    <Label Grid.Row="2" Grid.Column="0" Content="マウスボタン:"/>
                                    <ComboBox Grid.Row="2" Grid.Column="1"
                                              ItemsSource="{Binding EditPanelViewModel.MouseButtons}"
                                              SelectedItem="{Binding EditPanelViewModel.MouseButton}"
                                              Margin="5" Width="150" HorizontalAlignment="Left"/>
                                    
                                    <CheckBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
                                              IsChecked="{Binding EditPanelViewModel.UseBackgroundClick}"
                                              Content="バックグラウンドクリックを使用" Margin="5"/>
                                    
                                    <TextBlock Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2"
                                               Text="※ 座標取得ボタンでマウス位置を取得できます" 
                                               FontStyle="Italic" Foreground="Gray" Margin="5"/>
                                </Grid>
                            </GroupBox>

                            <!-- 待機設定 -->
                            <GroupBox Header="待機設定" Margin="0,0,0,10"
                                      Visibility="{Binding EditPanelViewModel.IsWaitItem, Converter={StaticResource BoolToVisibility}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <Label Grid.Row="0" Grid.Column="0" Content="待機時間:"/>
                                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="5">
                                        <TextBox Text="{Binding EditPanelViewModel.WaitHours}" Width="50" ToolTip="時間"/>
                                        <Label Content="時間" VerticalAlignment="Center" Margin="2,0,10,0"/>
                                        <TextBox Text="{Binding EditPanelViewModel.WaitMinutes}" Width="50" ToolTip="分"/>
                                        <Label Content="分" VerticalAlignment="Center" Margin="2,0,10,0"/>
                                        <TextBox Text="{Binding EditPanelViewModel.WaitSeconds}" Width="50" ToolTip="秒"/>
                                        <Label Content="秒" VerticalAlignment="Center" Margin="2,0,10,0"/>
                                        <TextBox Text="{Binding EditPanelViewModel.WaitMilliseconds}" Width="60" ToolTip="ミリ秒"/>
                                        <Label Content="ms" VerticalAlignment="Center" Margin="2,0"/>
                                    </StackPanel>
                                    
                                    <Label Grid.Row="1" Grid.Column="0" Content="合計:"/>
                                    <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="5">
                                        <TextBox Text="{Binding EditPanelViewModel.WaitTime}" Width="100" IsReadOnly="True" Background="LightGray"/>
                                        <Label Content="ms (自動計算)" VerticalAlignment="Center" Margin="5,0"/>
                                    </StackPanel>
                                </Grid>
                            </GroupBox>

                            <!-- ループ設定 -->
                            <GroupBox Header="ループ設定" Margin="0,0,0,10"
                                      Visibility="{Binding EditPanelViewModel.IsLoopItem, Converter={StaticResource BoolToVisibility}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <Label Grid.Column="0" Content="ループ回数:"/>
                                    <TextBox Grid.Column="1" 
                                             Text="{Binding EditPanelViewModel.LoopCount}" Margin="5"/>
                                </Grid>
                            </GroupBox>

                            <!-- ループ終了設定 -->
                            <GroupBox Header="ループ終了設定" Margin="0,0,0,10"
                                      Visibility="{Binding EditPanelViewModel.IsLoopEndItem, Converter={StaticResource BoolToVisibility}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <Label Grid.Row="0" Grid.Column="0" Content="ループ回数:"/>
                                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="5">
                                        <TextBox Text="{Binding EditPanelViewModel.LoopCount}" 
                                                 IsReadOnly="True" Background="LightGray" Width="100"/>
                                        <Label Content="※ペアのLoopから自動設定" VerticalAlignment="Center" 
                                               Foreground="Gray" Margin="10,0,0,0"/>
                                    </StackPanel>
                                    
                                    <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                                               Text="ペアのLoopコマンドでループ回数を変更してください。"
                                               FontStyle="Italic" Foreground="DarkBlue" Margin="5"/>
                                </Grid>
                            </GroupBox>

                            <!-- ループ中断設定 -->
                            <GroupBox Header="ループ中断設定" Margin="0,0,0,10"
                                      Visibility="{Binding EditPanelViewModel.IsLoopBreakItem, Converter={StaticResource BoolToVisibility}}">
                                <Grid>
                                    <TextBlock Text="ループを中断してループの外に抜けます。" 
                                               Margin="5" FontStyle="Italic" Foreground="DarkBlue"/>
                                </Grid>
                            </GroupBox>

                            <!-- 変数設定 -->
                            <GroupBox Header="変数設定" Margin="0,0,0,10"
                                      Visibility="{Binding EditPanelViewModel.IsVariableItem, Converter={StaticResource BoolToVisibility}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <Label Grid.Row="0" Grid.Column="0" Content="変数名:"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" 
                                             Text="{Binding EditPanelViewModel.VariableName}" Margin="5"/>
                                    
                                    <Label Grid.Row="1" Grid.Column="0" Content="値:" 
                                           Visibility="{Binding EditPanelViewModel.IsSetVariableItem, Converter={StaticResource BoolToVisibility}}"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" 
                                             Text="{Binding EditPanelViewModel.VariableValue}" Margin="5"
                                             Visibility="{Binding EditPanelViewModel.IsSetVariableItem, Converter={StaticResource BoolToVisibility}}"/>
                                    
                                    <Label Grid.Row="1" Grid.Column="0" Content="演算子:" 
                                           Visibility="{Binding EditPanelViewModel.IsIfVariableItem, Converter={StaticResource BoolToVisibility}}"/>
                                    <ComboBox Grid.Row="1" Grid.Column="1"
                                              ItemsSource="{Binding EditPanelViewModel.Operators}"
                                              SelectedValue="{Binding EditPanelViewModel.VariableOperator}"
                                              SelectedValuePath="Key"
                                              DisplayMemberPath="DisplayName"
                                              Margin="5"
                                              Visibility="{Binding EditPanelViewModel.IsIfVariableItem, Converter={StaticResource BoolToVisibility}}"/>
                                    
                                    <Label Grid.Row="2" Grid.Column="0" Content="比較値:" 
                                           Visibility="{Binding EditPanelViewModel.IsIfVariableItem, Converter={StaticResource BoolToVisibility}}"/>
                                    <TextBox Grid.Row="2" Grid.Column="1" 
                                             Text="{Binding EditPanelViewModel.VariableValue}" Margin="5"
                                             Visibility="{Binding EditPanelViewModel.IsIfVariableItem, Converter={StaticResource BoolToVisibility}}"/>
                                </Grid>
                            </GroupBox>

                            <!-- AI設定 -->
                            <GroupBox Header="AI設定" Margin="0,0,0,10"
                                      Visibility="{Binding EditPanelViewModel.IsAIBasedItem, Converter={StaticResource BoolToVisibility}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <Label Grid.Row="0" Grid.Column="0" Content="モデルパス:"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" 
                                             Text="{Binding EditPanelViewModel.ModelPath}" Margin="5"/>
                                    <Button Grid.Row="0" Grid.Column="2" Content="参照" 
                                            Command="{Binding EditPanelViewModel.BrowseModelFileCommand}" Margin="5"/>
                                    
                                    <Label Grid.Row="1" Grid.Column="0" Content="クラスID:"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"
                                             Text="{Binding EditPanelViewModel.ClassID}" Margin="5"/>
                                    
                                    <Label Grid.Row="2" Grid.Column="0" Content="信頼度閾値:"/>
                                    <StackPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="5">
                                        <Slider Value="{Binding EditPanelViewModel.ConfThreshold}" 
                                                Minimum="0" Maximum="1" Width="150" VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding EditPanelViewModel.ConfThreshold, StringFormat=F2}" 
                                                 Width="60" Margin="10,0,0,0"/>
                                    </StackPanel>
                                    
                                    <Label Grid.Row="3" Grid.Column="0" Content="IoU閾値:"/>
                                    <StackPanel Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="5">
                                        <Slider Value="{Binding EditPanelViewModel.IoUThreshold}" 
                                                Minimum="0" Maximum="1" Width="150" VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding EditPanelViewModel.IoUThreshold, StringFormat=F2}" 
                                                 Width="60" Margin="10,0,0,0"/>
                                    </StackPanel>
                                    
                                    <Label Grid.Row="4" Grid.Column="0" Content="検出モード:" 
                                           Visibility="{Binding EditPanelViewModel.IsSetVariableAIItem, Converter={StaticResource BoolToVisibility}}"/>
                                    <ComboBox Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2"
                                              ItemsSource="{Binding EditPanelViewModel.AiDetectModes}"
                                              SelectedValue="{Binding EditPanelViewModel.AiDetectMode}"
                                              SelectedValuePath="Key"
                                              DisplayMemberPath="DisplayName"
                                              Margin="5"
                                              Visibility="{Binding EditPanelViewModel.IsSetVariableAIItem, Converter={StaticResource BoolToVisibility}}"/>
                                </Grid>
                            </GroupBox>

                            <!-- プログラム実行設定 -->
                            <GroupBox Header="プログラム実行設定" Margin="0,0,0,10"
                                      Visibility="{Binding EditPanelViewModel.IsExecuteItem, Converter={StaticResource BoolToVisibility}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <Label Grid.Row="0" Grid.Column="0" Content="実行ファイル:"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" 
                                             Text="{Binding EditPanelViewModel.ProgramPath}" Margin="5"/>
                                    <Button Grid.Row="0" Grid.Column="2" Content="参照" 
                                            Command="{Binding EditPanelViewModel.BrowseProgramFileCommand}" Margin="5"/>
                                    
                                    <Label Grid.Row="1" Grid.Column="0" Content="引数:"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"
                                             Text="{Binding EditPanelViewModel.Arguments}" Margin="5"/>
                                    
                                    <Label Grid.Row="2" Grid.Column="0" Content="作業フォルダ:"/>
                                    <TextBox Grid.Row="2" Grid.Column="1" 
                                             Text="{Binding EditPanelViewModel.WorkingDirectory}" Margin="5"/>
                                    <Button Grid.Row="2" Grid.Column="2" Content="参照" 
                                            Command="{Binding EditPanelViewModel.BrowseWorkingDirectoryCommand}" Margin="5"/>
                                    
                                    <CheckBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"
                                              IsChecked="{Binding EditPanelViewModel.WaitForExit}"
                                              Content="終了まで待機" Margin="5"/>
                                </Grid>
                            </GroupBox>

                            <!-- スクリーンショット設定 -->
                            <GroupBox Header="スクリーンショット設定" Margin="0,0,0,10"
                                      Visibility="{Binding EditPanelViewModel.IsScreenshotItem, Converter={StaticResource BoolToVisibility}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <Label Grid.Column="0" Content="保存先:"/>
                                    <TextBox Grid.Column="1" 
                                             Text="{Binding EditPanelViewModel.SaveDirectory}" Margin="5"/>
                                    <Button Grid.Column="2" Content="参照" 
                                            Command="{Binding EditPanelViewModel.BrowseSaveDirectoryCommand}" Margin="5"/>
                                </Grid>
                            </GroupBox>

                            <!-- 実行状態表示 -->
                            <GroupBox Header="実行状態" Margin="0,0,0,10">
                                <StackPanel>
                                    <TextBlock Text="{Binding EditPanelViewModel.IsRunning, Converter={StaticResource RunningStatusConverter}}" 
                                               FontWeight="Bold" Margin="5"/>
                                    <TextBlock Text="{Binding EditPanelViewModel.ListCount, StringFormat='項目数: {0}'}" Margin="5"/>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="ログ">
                    <!-- Phase 5: AutoTool統合版LogPanelに相当するコントロール -->
                    <Grid>
                        <ListBox ItemsSource="{Binding LogPanelViewModel.LogItems}"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                 ScrollViewer.HorizontalScrollBarVisibility="Auto">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" FontFamily="Consolas" FontSize="11"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </TabItem>
            </TabControl>

            <!-- ロード中オーバーレイ -->
            <Border Grid.RowSpan="2" Grid.ColumnSpan="3" Background="#80000000" 
                    Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibility}}">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="Phase 5完全統合処理中..." Foreground="White" FontSize="16" HorizontalAlignment="Center"/>
                    <ProgressBar IsIndeterminate="True" Width="200" Height="20" Margin="0,10,0,0"/>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>
</UserControl>
