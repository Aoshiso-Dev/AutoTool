<UserControl x:Class="MacroPanels.View.EditPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:MacroPanels.ViewModel"
             xmlns:converter="clr-namespace:MacroPanels.View.Converter"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:item="clr-namespace:MacroPanels.List.Class"
             mc:Ignorable="d"
             d:DesignHeight="1000" d:DesignWidth="300">

    <UserControl.Resources>
        <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converter:BoolToVisibilityMultiConverter x:Key="BoolToVisibilityMultiConverter"/>
        <converter:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converter:KeyToStringConverter x:Key="KeyToStringConverter" />
        <Style TargetType="Button">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Width" Value="50"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Width" Value="100"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Width" Value="100"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Width" Value="100"/>
        </Style>
        <Style TargetType="Slider">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Width" Value="100"/>
        </Style>
        <Style TargetType="Image">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="150"/>
        </Style>
    </UserControl.Resources>

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Border BorderBrush="LightGray" BorderThickness="1">
            <DockPanel LastChildFill="True" Margin="10"
                       IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBooleanConverter}}"
                       Visibility="{Binding DataContext.IsListNotEmpty, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
                <StackPanel DockPanel.Dock="Left">
                    <!-- コマンドスタックパネル -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="コマンド:"/>
                        <ComboBox ItemsSource="{Binding ItemTypes, UpdateSourceTrigger=PropertyChanged}" 
                                  SelectedItem="{Binding SelectedItemTypeObj, UpdateSourceTrigger=PropertyChanged}" 
                                  DisplayMemberPath="DisplayName"
                                  Width="300"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsNotNullItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>
                    
                    <!-- 対象ウィンドウの設定 -->
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="対象ウィンドウ:"/>
                                    <TextBox Text="{Binding WindowTitleText, Mode=OneWay}" IsReadOnly="True" Width="300"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="ウィンドウクラス:"/>
                                    <TextBox Text="{Binding WindowClassNameText, Mode=OneWay}" IsReadOnly="True" Width="300"/>
                                </StackPanel>
                            </StackPanel>
                            <Button Content="取得" Command="{Binding GetWindowInfoCommand}" />
                            <Button Content="クリア" Command="{Binding ClearWindowInfoCommand}"/>
                        </StackPanel>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsWaitImageItem"/>
                                <Binding Path="IsClickImageItem"/>
                                <Binding Path="IsClickImageAIItem"/>
                                <Binding Path="IsClickItem"/>
                                <Binding Path="IsHotkeyItem"/>
                                <Binding Path="IsIfImageExistItem"/>
                                <Binding Path="IsIfImageNotExistItem"/>
                                <Binding Path="IsIfImageExistAIItem"/>
                                <Binding Path="IsIfImageNotExistAIItem"/>
                                <Binding Path="IsSetVariableAIItem"/>
                                <Binding Path="IsScreenshotItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>

                    <!-- 画像パスの設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="画像パス:"/>
                        <TextBox Text="{Binding ImagePath, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="300"/>
                        <Button Content="参照" Command="{Binding BrowseCommand}"/>
                        <Button Content="取得" Command="{Binding CaptureCommand}"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsWaitImageItem"/>
                                <Binding Path="IsClickImageItem"/>
                                <Binding Path="IsIfImageExistItem"/>
                                <Binding Path="IsIfImageNotExistItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>

                    <!-- しきい値の設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="しきい値:"/>
                        <Slider Value="{Binding Threshold, UpdateSourceTrigger=PropertyChanged}" Minimum="0.01" Maximum="1.00" SmallChange="0.01" LargeChange="0.1" TickFrequency="0.01" IsSnapToTickEnabled="True" />
                        <TextBox Text="{Binding Threshold, StringFormat=F2}" IsReadOnly="True" Width="50"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsWaitImageItem"/>
                                <Binding Path="IsClickImageItem"/>
                                <Binding Path="IsIfImageExistItem"/>
                                <Binding Path="IsIfImageNotExistItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>
                    
                    <!-- 検索色指定の設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="強調検索色:"/>
                        <TextBox Text="{Binding SearchColorText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Foreground="{Binding SearchColorTextColor}" Background="{Binding SearchColorBrush}"/>
                        <Button Content="取得" Command="{Binding PickSearchColorCommand}"/>
                        <Button Content="クリア" Command="{Binding ClearSearchColorCommand}"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsWaitImageItem"/>
                                <Binding Path="IsClickImageItem"/>
                                <Binding Path="IsIfImageExistItem"/>
                                <Binding Path="IsIfImageNotExistItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>
                    
                    <!-- ONNXモデルの設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="ONNXモデル:"/>
                        <TextBox Text="{Binding ModelPath, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="300"/>
                        <Button Content="参照" Command="{Binding BrowseModelCommand}"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsClickImageAIItem"/>
                                <Binding Path="IsIfImageExistAIItem"/>
                                <Binding Path="IsIfImageNotExistAIItem"/>
                                <Binding Path="IsSetVariableAIItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>
                    
                    <!-- ClassIDの設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="クラスID:"/>
                        <TextBox Text="{Binding ClassID, UpdateSourceTrigger=PropertyChanged}" Width="200"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsClickImageAIItem"/>
                                <Binding Path="IsIfImageExistAIItem"/>
                                <Binding Path="IsIfImageNotExistAIItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>

                    <!-- 信頼度閾値の設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="信頼度閾値:"/>
                        <Slider Value="{Binding ConfThreshold, UpdateSourceTrigger=PropertyChanged}" Minimum="0.01" Maximum="1.00" SmallChange="0.01" LargeChange="0.1" TickFrequency="0.01" IsSnapToTickEnabled="True" />
                        <TextBox Text="{Binding ConfThreshold, StringFormat=F2}" IsReadOnly="True" Width="50"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsClickImageAIItem"/>
                                <Binding Path="IsIfImageExistAIItem"/>
                                <Binding Path="IsIfImageNotExistAIItem"/>
                                <Binding Path="IsSetVariableAIItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>

                    <!-- IoU閾値の設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="IoU閾値:"/>
                        <Slider Value="{Binding IoUThreshold, UpdateSourceTrigger=PropertyChanged}" Minimum="0.01" Maximum="1.00" SmallChange="0.01" LargeChange="0.1" TickFrequency="0.01" IsSnapToTickEnabled="True" />
                        <TextBox Text="{Binding IoUThreshold, StringFormat=F2}" IsReadOnly="True" Width="50"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsClickImageAIItem"/>
                                <Binding Path="IsIfImageExistAIItem"/>
                                <Binding Path="IsIfImageNotExistAIItem"/>
                                <Binding Path="IsSetVariableAIItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>

                    <!-- モードの設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="モード:"/>
                        <ComboBox ItemsSource="{Binding AIDetectModes, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedAIDetectMode}"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsSetVariableAIItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>

                    <!-- タイムアウトの設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="タイムアウト:"/>
                        <TextBox Text="{Binding Timeout, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="ミリ秒"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsClickImageAIItem"/>
                                <Binding Path="IsWaitImageItem"/>
                                <Binding Path="IsClickImageItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>

                    <!-- 実行間隔の設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="実行間隔:"/>
                        <TextBox Text="{Binding Interval, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="ミリ秒"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsClickImageAIItem"/>
                                <Binding Path="IsWaitImageItem"/>
                                <Binding Path="IsClickImageItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>

                    <!-- XY座標の設定 -->
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="X座標:"/>
                                    <TextBox Text="{Binding X, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="50"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Y座標:"/>
                                    <TextBox Text="{Binding Y, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="50"/>
                                </StackPanel>
                            </StackPanel>
                            <Button Content="取得" Command="{Binding PickPointCommand}"/>
                        </StackPanel>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsClickItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>
                    
                    <!-- マウスボタンの設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="ボタン:"/>
                        <ComboBox ItemsSource="{Binding MouseButtons, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedMouseButton}"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsClickImageAIItem"/>
                                <Binding Path="IsClickImageItem"/>
                                <Binding Path="IsClickItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>

                    <!-- ホットキーの設定 -->
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Ctrl:"/>
                            <CheckBox IsChecked="{Binding Ctrl, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Shift:"/>
                            <CheckBox IsChecked="{Binding Shift, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Alt:"/>
                            <CheckBox IsChecked="{Binding Alt, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="キー:"/>
                            <TextBox Text="{Binding Key, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource KeyToStringConverter}}"
                                     Margin="2"/>
                        </StackPanel>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsHotkeyItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>

                    <!-- 待機時間の設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="待機時間:"/>
                        <TextBox Text="{Binding Wait, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Text="(ms)"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsWaitItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>

                    <!-- ループ回数の設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="ループ回数:"/>
                        <TextBox Text="{Binding LoopCount, UpdateSourceTrigger=PropertyChanged}"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsLoopItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>

                    <!-- プログラムパスの設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="プログラムパス:"/>
                        <TextBox Text="{Binding ProgramPath, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="300"/>
                        <Button Content="参照" Command="{Binding BrowseProgramCommand}"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsExecuteProgramItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>

                    <!-- 引数の設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="引数:"/>
                        <TextBox Text="{Binding Arguments, UpdateSourceTrigger=PropertyChanged}" Width="300"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsExecuteProgramItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>
                    
                    <!-- ワーキングディレクトリの設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="ワーキングディレクトリ:"/>
                        <TextBox Text="{Binding WorkingDirectory, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="300"/>
                        <Button Content="参照" Command="{Binding BrowseWorkingDirectoryCommand}"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsExecuteProgramItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>
                    
                    <!-- 変数名の設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="変数名:"/>
                        <TextBox Text="{Binding VariableName, UpdateSourceTrigger=PropertyChanged}" Width="200"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsSetVariableItem"/>
                                <Binding Path="IsIfVariableItem"/>
                                <Binding Path="IsSetVariableAIItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>
                    
                    <!-- 変数値の設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="変数値:"/>
                        <TextBox Text="{Binding VariableValue, UpdateSourceTrigger=PropertyChanged}" Width="300"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsSetVariableItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>
                    
                    <!-- 比較演算子の設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="比較演算子:"/>
                        <ComboBox ItemsSource="{Binding Operators, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedOperator}"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsIfVariableItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>

                    <!-- 比較値の設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="比較値:"/>
                        <TextBox Text="{Binding CompareValue, UpdateSourceTrigger=PropertyChanged}" Width="200"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsIfVariableItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>
                    
                    <!-- スクリーンショット保存先ディレクトリの設定 -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="保存先ディレクトリ:"/>
                        <TextBox Text="{Binding SaveDirectory, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="300"/>
                        <Button Content="参照" Command="{Binding BrowseSaveDirectoryCommand}"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsScreenshotItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>
                    
                    <!-- コメント設定（全コマンド共通） -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="コメント:"/>
                        <TextBox Text="{Binding Comment, UpdateSourceTrigger=PropertyChanged}" 
                                 Width="300" 
                                 Height="60"
                                 TextWrapping="Wrap"
                                 AcceptsReturn="True"
                                 VerticalScrollBarVisibility="Auto"
                                 ToolTip="このコマンドに関する説明やメモを入力できます"/>
                        <StackPanel.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                <Binding Path="IsNotNullItem"/>
                            </MultiBinding>
                        </StackPanel.Visibility>
                    </StackPanel>

                </StackPanel>
                
                
                
                <!-- 画像のプレビュー -->
                <GroupBox Header="プレビュー">
                    <Image Source="{Binding ImagePath, UpdateSourceTrigger=PropertyChanged}" Width="auto" Height="auto"/>
                    <GroupBox.Visibility>
                        <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                            <Binding Path="IsWaitImageItem"/>
                            <Binding Path="IsClickImageItem"/>
                            <Binding Path="IsIfImageExistItem"/>
                            <Binding Path="IsIfImageNotExistItem"/>
                        </MultiBinding>
                    </GroupBox.Visibility>
                </GroupBox>
            </DockPanel>
        </Border>
    </Grid>
</UserControl>
