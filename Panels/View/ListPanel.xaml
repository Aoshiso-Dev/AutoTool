<UserControl x:Class="Panels.View.ListPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:Panels.ViewModel"
             xmlns:converter="clr-namespace:Panels.View.Converter"
             mc:Ignorable="d"
             d:DesignHeight="1000" d:DesignWidth="1000">

    <UserControl.Resources>
        <converter:NumberToBooleanConverter x:Key="NumberToBooleanConverter"/>
        <converter:BooleanToTextConverter x:Key="BooleanToTextConverter" TrueText=">>" FalseText=""/>
        <converter:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
        <converter:KeyToStringConverter x:Key="KeyToStringConverter" />
        <converter:NestLevelToMarginConverter x:Key="NestLevelToMarginConverter" />
    </UserControl.Resources>

    <DockPanel LastChildFill="True">
        

        <!-- DataGrid -->
        <DataGrid DockPanel.Dock="Top" ItemsSource="{Binding CommandList.Items, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding DataContext.SelectedLineNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" SelectionMode="Single" HeadersVisibility="Column" CanUserAddRows="False" AutoGenerateColumns="False" EnableRowVirtualization="True" EnableColumnVirtualization="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MaxHeight="800">
            <DataGrid.Resources>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <!-- IsSelected が true で DataGrid にフォーカスがある場合 -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                        </Trigger>

                        <!-- IsSelected が true で DataGrid にフォーカスがない場合 -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="LightBlue" />
                        </MultiTrigger>
                        
                        <!-- IsRunning が　true の場合 -->
                        <DataTrigger Binding="{Binding IsRunning}" Value="True">
                            <Setter Property="Background" Value="LightGreen" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <!-- IsSelected が true で DataGrid にフォーカスがある場合 -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                        </Trigger>

                        <!-- IsSelected が true で DataGrid にフォーカスがない場合 -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="LightBlue" />
                        </MultiTrigger>

                        <!-- IsRunning が　true の場合 -->
                        <DataTrigger Binding="{Binding IsRunning}" Value="True">
                            <Setter Property="Background" Value="LightGreen" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>
                
                <!-- LineNumber -->
                <DataGridTemplateColumn Header="" Width="30">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding LineNumber}" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- NestLevel -->
                <!--
                <DataGridTextColumn Header="" Width="30" Binding="{Binding NestLevel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                -->

                <!-- Command -->
                <DataGridTemplateColumn Header="Command" Width="150">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ItemType}" VerticalAlignment="Center" Margin="{Binding NestLevel, Converter={StaticResource NestLevelToMarginConverter}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Description -->
                <DataGridTemplateColumn Header="Description" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Description}" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>