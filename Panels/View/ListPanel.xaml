<UserControl x:Class="MacroPanels.View.ListPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:MacroPanels.ViewModel"
             xmlns:converter="clr-namespace:MacroPanels.View.Converter"
             mc:Ignorable="d"
             d:DesignHeight="1000" d:DesignWidth="1000">

    <UserControl.Resources>
        <converter:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converter:NumberToBooleanConverter x:Key="NumberToBooleanConverter"/>
        <converter:BooleanToTextConverter x:Key="BooleanToTextConverter" TrueText=">>" FalseText=""/>
        <converter:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
        <converter:KeyToStringConverter x:Key="KeyToStringConverter" />
        <converter:NestLevelToMarginConverter x:Key="NestLevelToMarginConverter" />
        <converter:CommandTypeToDisplayNameConverter x:Key="CommandTypeToDisplayNameConverter"/>
        <converter:CommandTypeToCategoryColorConverter x:Key="CommandTypeToCategoryColorConverter"/>
    </UserControl.Resources>

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

    <!-- DataGrid -->
        <DataGrid DockPanel.Dock="Top"
                  ItemsSource="{Binding CommandList.Items, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding DataContext.SelectedLineNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                  SelectionMode="Single" HeadersVisibility="Column" CanUserAddRows="False" AutoGenerateColumns="False" EnableRowVirtualization="True" EnableColumnVirtualization="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                  VerticalScrollBarVisibility="Visible"
                  HorizontalScrollBarVisibility="Auto"
                  >

            <DataGrid.Resources>
                
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <!-- IsSelected が true かつ マクロ未実行の場合 -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected}" Value="True" />
                                <Condition Binding="{Binding DataContext.IsRunning, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="LightBlue" />
                        </MultiDataTrigger>

                        <!-- IsRunning が true かつ マクロ実行中の場合 -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRunning}" Value="True" />
                                <Condition Binding="{Binding DataContext.IsRunning, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="LightBlue" />
                            <Setter Property="FontWeight" Value="Bold"/>
                        </MultiDataTrigger>

                        <!-- IsRunning が false かつ マクロ実行中の場合 -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRunning}" Value="False" />
                                <Condition Binding="{Binding DataContext.IsRunning, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="LightGray" />
                        </MultiDataTrigger>


                        <!-- IsSelected が true で DataGrid にフォーカスがない場合 -->
                        <!--
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="LightBlue" />
                        </MultiTrigger>
                        -->
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            

            <DataGrid.Columns>
                
                <!-- IsEnable -->
                <DataGridTemplateColumn Header="" Width="auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsEnable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding DataContext.IsRunning, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource InverseBooleanConverter}}" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Progress -->
                <DataGridTemplateColumn Header="Progress" Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <ProgressBar Value="{Binding Progress}" Maximum="100" Height="20" VerticalAlignment="Center">
                                    <ProgressBar.Resources>
                                        <Style TargetType="ProgressBar">
                                            <Setter Property="Foreground" Value="LightGreen"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <!--
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Progress}" Value="100">
                                                    <Setter Property="Foreground" Value="LightGray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                            -->
                                        </Style>
                                    </ProgressBar.Resources>
                                </ProgressBar>
                                <TextBlock Text="" VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                                    <Setter Property="Text" Value=">>>"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- LineNumber -->
                <DataGridTemplateColumn Header="" Width="30">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding LineNumber}" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- NestLevel -->
                <!--
                <DataGridTextColumn Header="" Width="30" Binding="{Binding NestLevel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                -->

                <!-- コマンド -->
                <DataGridTemplateColumn Header="コマンド" Width="200">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <!-- DisplayNameプロパティを直接使用 -->
                            <Border Background="{Binding ItemType, Converter={StaticResource CommandTypeToCategoryColorConverter}}" 
                                    CornerRadius="3" 
                                    Padding="5,2">
                                <TextBlock Text="{Binding DisplayName}" 
                                           VerticalAlignment="Center" 
                                           Margin="{Binding NestLevel, Converter={StaticResource NestLevelToMarginConverter}}"
                                           FontWeight="SemiBold"
                                           Foreground="Black"/>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                

                <!-- 説明・コメント -->
                <DataGridTemplateColumn Header="説明・コメント" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <!-- 自動生成された説明 -->
                                <TextBlock Grid.Row="0" 
                                           Text="{Binding Description}" 
                                           VerticalAlignment="Center"
                                           FontSize="12"
                                           Foreground="DarkBlue"
                                           TextWrapping="Wrap"
                                           Margin="2,1"/>
                                
                                <!-- コメント表示・編集 -->
                                <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="2,1">
                                    <TextBlock Text="💬" 
                                               VerticalAlignment="Center"
                                               Visibility="{Binding HasComment, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                    <TextBox Text="{Binding Comment, UpdateSourceTrigger=PropertyChanged}" 
                                             VerticalAlignment="Center"
                                             Background="Transparent"
                                             BorderThickness="0"
                                             FontSize="11"
                                             FontStyle="Italic"
                                             Foreground="DarkGreen"
                                             Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=DataGridCell}}"
                                             TextWrapping="Wrap"
                                             AcceptsReturn="False"
                                             IsEnabled="{Binding DataContext.IsRunning, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource InverseBooleanConverter}}">
                                        <TextBox.ToolTip>
                                            <ToolTip Content="このコマンドにコメントを追加できます。空白の場合は表示されません。"/>
                                        </TextBox.ToolTip>
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="TextBox">
                                                            <Border Background="{TemplateBinding Background}"
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                                                <ScrollViewer x:Name="PART_ContentHost" />
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsFocused" Value="True">
                                                                    <Setter Property="Background" Value="LightYellow"/>
                                                                    <Setter Property="BorderBrush" Value="Orange"/>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="#F0F8FF"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                    
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>